// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: node.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MakeDirectoryCSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Node authentication key.
	NodeKey string `protobuf:"bytes,1,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
	// The ID of the user for which this request
	// originated from.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ID of the parent directory.
	ParentDirId *UUID `protobuf:"bytes,3,opt,name=parent_dir_id,json=parentDirId,proto3" json:"parent_dir_id,omitempty"`
	// ID and name of the new directory.
	NewDirId   *UUID  `protobuf:"bytes,4,opt,name=new_dir_id,json=newDirId,proto3" json:"new_dir_id,omitempty"`
	NewDirName string `protobuf:"bytes,5,opt,name=new_dir_name,json=newDirName,proto3" json:"new_dir_name,omitempty"`
}

func (x *MakeDirectoryCSRequest) Reset() {
	*x = MakeDirectoryCSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeDirectoryCSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeDirectoryCSRequest) ProtoMessage() {}

func (x *MakeDirectoryCSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeDirectoryCSRequest.ProtoReflect.Descriptor instead.
func (*MakeDirectoryCSRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{0}
}

func (x *MakeDirectoryCSRequest) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *MakeDirectoryCSRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MakeDirectoryCSRequest) GetParentDirId() *UUID {
	if x != nil {
		return x.ParentDirId
	}
	return nil
}

func (x *MakeDirectoryCSRequest) GetNewDirId() *UUID {
	if x != nil {
		return x.NewDirId
	}
	return nil
}

func (x *MakeDirectoryCSRequest) GetNewDirName() string {
	if x != nil {
		return x.NewDirName
	}
	return ""
}

type MakeDirectoryCSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedDirId *UUID `protobuf:"bytes,1,opt,name=created_dir_id,json=createdDirId,proto3" json:"created_dir_id,omitempty"`
}

func (x *MakeDirectoryCSResponse) Reset() {
	*x = MakeDirectoryCSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeDirectoryCSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeDirectoryCSResponse) ProtoMessage() {}

func (x *MakeDirectoryCSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeDirectoryCSResponse.ProtoReflect.Descriptor instead.
func (*MakeDirectoryCSResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{1}
}

func (x *MakeDirectoryCSResponse) GetCreatedDirId() *UUID {
	if x != nil {
		return x.CreatedDirId
	}
	return nil
}

type AddNewFileCSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeKey string `protobuf:"bytes,1,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ID of directory to place folder in.
	ParentDirId *UUID  `protobuf:"bytes,3,opt,name=parent_dir_id,json=parentDirId,proto3" json:"parent_dir_id,omitempty"`
	NewFileId   *UUID  `protobuf:"bytes,4,opt,name=new_file_id,json=newFileId,proto3" json:"new_file_id,omitempty"`
	NewFileName string `protobuf:"bytes,5,opt,name=new_file_name,json=newFileName,proto3" json:"new_file_name,omitempty"`
	// Contents of file being added...
	// If not provided, an empty file
	// will be created.
	Contents []byte `protobuf:"bytes,6,opt,name=contents,proto3" json:"contents,omitempty"`
}

func (x *AddNewFileCSRequest) Reset() {
	*x = AddNewFileCSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewFileCSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewFileCSRequest) ProtoMessage() {}

func (x *AddNewFileCSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewFileCSRequest.ProtoReflect.Descriptor instead.
func (*AddNewFileCSRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{2}
}

func (x *AddNewFileCSRequest) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *AddNewFileCSRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddNewFileCSRequest) GetParentDirId() *UUID {
	if x != nil {
		return x.ParentDirId
	}
	return nil
}

func (x *AddNewFileCSRequest) GetNewFileId() *UUID {
	if x != nil {
		return x.NewFileId
	}
	return nil
}

func (x *AddNewFileCSRequest) GetNewFileName() string {
	if x != nil {
		return x.NewFileName
	}
	return ""
}

func (x *AddNewFileCSRequest) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

type AddNewFileCSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedFileId *UUID `protobuf:"bytes,1,opt,name=created_file_id,json=createdFileId,proto3" json:"created_file_id,omitempty"`
}

func (x *AddNewFileCSResponse) Reset() {
	*x = AddNewFileCSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewFileCSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewFileCSResponse) ProtoMessage() {}

func (x *AddNewFileCSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewFileCSResponse.ProtoReflect.Descriptor instead.
func (*AddNewFileCSResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{3}
}

func (x *AddNewFileCSResponse) GetCreatedFileId() *UUID {
	if x != nil {
		return x.CreatedFileId
	}
	return nil
}

type UpdateFileContentsCSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeKey string `protobuf:"bytes,1,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FileId  *UUID  `protobuf:"bytes,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	// The given file's contents will be
	// set to contents.
	Contents []byte `protobuf:"bytes,4,opt,name=contents,proto3" json:"contents,omitempty"`
}

func (x *UpdateFileContentsCSRequest) Reset() {
	*x = UpdateFileContentsCSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileContentsCSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileContentsCSRequest) ProtoMessage() {}

func (x *UpdateFileContentsCSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileContentsCSRequest.ProtoReflect.Descriptor instead.
func (*UpdateFileContentsCSRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFileContentsCSRequest) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *UpdateFileContentsCSRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateFileContentsCSRequest) GetFileId() *UUID {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *UpdateFileContentsCSRequest) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

type UpdateFileContentsCSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedFileId *UUID `protobuf:"bytes,1,opt,name=updated_file_id,json=updatedFileId,proto3" json:"updated_file_id,omitempty"`
}

func (x *UpdateFileContentsCSResponse) Reset() {
	*x = UpdateFileContentsCSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileContentsCSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileContentsCSResponse) ProtoMessage() {}

func (x *UpdateFileContentsCSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileContentsCSResponse.ProtoReflect.Descriptor instead.
func (*UpdateFileContentsCSResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateFileContentsCSResponse) GetUpdatedFileId() *UUID {
	if x != nil {
		return x.UpdatedFileId
	}
	return nil
}

type MoveObjectCSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeKey string `protobuf:"bytes,1,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Object to move.
	CurrObjectId *UUID `protobuf:"bytes,3,opt,name=curr_object_id,json=currObjectId,proto3" json:"curr_object_id,omitempty"`
	// The new object ID after the move.
	NewObjectId *UUID `protobuf:"bytes,4,opt,name=new_object_id,json=newObjectId,proto3" json:"new_object_id,omitempty"`
	// Directory to move to.
	DirId *UUID `protobuf:"bytes,5,opt,name=dir_id,json=dirId,proto3" json:"dir_id,omitempty"`
	// New name of object.
	NewName string `protobuf:"bytes,6,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *MoveObjectCSRequest) Reset() {
	*x = MoveObjectCSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveObjectCSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveObjectCSRequest) ProtoMessage() {}

func (x *MoveObjectCSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveObjectCSRequest.ProtoReflect.Descriptor instead.
func (*MoveObjectCSRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{6}
}

func (x *MoveObjectCSRequest) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *MoveObjectCSRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MoveObjectCSRequest) GetCurrObjectId() *UUID {
	if x != nil {
		return x.CurrObjectId
	}
	return nil
}

func (x *MoveObjectCSRequest) GetNewObjectId() *UUID {
	if x != nil {
		return x.NewObjectId
	}
	return nil
}

func (x *MoveObjectCSRequest) GetDirId() *UUID {
	if x != nil {
		return x.DirId
	}
	return nil
}

func (x *MoveObjectCSRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type MoveObjectCSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovedObjectId *UUID `protobuf:"bytes,1,opt,name=moved_object_id,json=movedObjectId,proto3" json:"moved_object_id,omitempty"`
}

func (x *MoveObjectCSResponse) Reset() {
	*x = MoveObjectCSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveObjectCSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveObjectCSResponse) ProtoMessage() {}

func (x *MoveObjectCSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveObjectCSResponse.ProtoReflect.Descriptor instead.
func (*MoveObjectCSResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{7}
}

func (x *MoveObjectCSResponse) GetMovedObjectId() *UUID {
	if x != nil {
		return x.MovedObjectId
	}
	return nil
}

type RemoveObjectCSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeKey string `protobuf:"bytes,1,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Object to delete.
	ObjectId *UUID `protobuf:"bytes,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *RemoveObjectCSRequest) Reset() {
	*x = RemoveObjectCSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveObjectCSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveObjectCSRequest) ProtoMessage() {}

func (x *RemoveObjectCSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveObjectCSRequest.ProtoReflect.Descriptor instead.
func (*RemoveObjectCSRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveObjectCSRequest) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *RemoveObjectCSRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveObjectCSRequest) GetObjectId() *UUID {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

type RemoveObjectCSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemovedObjectId *UUID `protobuf:"bytes,1,opt,name=removed_object_id,json=removedObjectId,proto3" json:"removed_object_id,omitempty"`
}

func (x *RemoveObjectCSResponse) Reset() {
	*x = RemoveObjectCSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveObjectCSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveObjectCSResponse) ProtoMessage() {}

func (x *RemoveObjectCSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveObjectCSResponse.ProtoReflect.Descriptor instead.
func (*RemoveObjectCSResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveObjectCSResponse) GetRemovedObjectId() *UUID {
	if x != nil {
		return x.RemovedObjectId
	}
	return nil
}

var File_node_proto protoreflect.FileDescriptor

var file_node_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x6f,
	0x6f, 0x74, 0x66, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x6b, 0x65, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x69, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f,
	0x6f, 0x74, 0x66, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x6e,
	0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x44, 0x69, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x6e, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x44, 0x69, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52,
	0x0a, 0x17, 0x4d, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43,
	0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x69, 0x72,
	0x49, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x68,
	0x65, 0x61, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x44, 0x69, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f,
	0x74, 0x66, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x09, 0x6e,
	0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x51, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4e,
	0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74,
	0x66, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0d, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x59, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x53, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e,
	0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x06, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x05, 0x64, 0x69, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x14, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0f, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x68, 0x65,
	0x61, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0d, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e,
	0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66,
	0x73, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0f, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x32, 0xe0, 0x03, 0x0a,
	0x0e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5c, 0x0a, 0x0f, 0x4d, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x53, 0x12, 0x23, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x53,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x43, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x53, 0x12, 0x20, 0x2e,
	0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4e,
	0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x53, 0x12, 0x28, 0x2e, 0x68, 0x6f, 0x6f,
	0x74, 0x66, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x53, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x53, 0x12,
	0x20, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x53, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x53, 0x12, 0x22, 0x2e, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x6f, 0x6f,
	0x74, 0x66, 0x73, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f,
	0x6f, 0x74, 0x66, 0x73, 0x2f, 0x68, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_node_proto_rawDescOnce sync.Once
	file_node_proto_rawDescData = file_node_proto_rawDesc
)

func file_node_proto_rawDescGZIP() []byte {
	file_node_proto_rawDescOnce.Do(func() {
		file_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_proto_rawDescData)
	})
	return file_node_proto_rawDescData
}

var file_node_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_node_proto_goTypes = []interface{}{
	(*MakeDirectoryCSRequest)(nil),       // 0: hootfs.node.MakeDirectoryCSRequest
	(*MakeDirectoryCSResponse)(nil),      // 1: hootfs.node.MakeDirectoryCSResponse
	(*AddNewFileCSRequest)(nil),          // 2: hootfs.node.AddNewFileCSRequest
	(*AddNewFileCSResponse)(nil),         // 3: hootfs.node.AddNewFileCSResponse
	(*UpdateFileContentsCSRequest)(nil),  // 4: hootfs.node.UpdateFileContentsCSRequest
	(*UpdateFileContentsCSResponse)(nil), // 5: hootfs.node.UpdateFileContentsCSResponse
	(*MoveObjectCSRequest)(nil),          // 6: hootfs.node.MoveObjectCSRequest
	(*MoveObjectCSResponse)(nil),         // 7: hootfs.node.MoveObjectCSResponse
	(*RemoveObjectCSRequest)(nil),        // 8: hootfs.node.RemoveObjectCSRequest
	(*RemoveObjectCSResponse)(nil),       // 9: hootfs.node.RemoveObjectCSResponse
	(*UUID)(nil),                         // 10: hootfs.head.UUID
}
var file_node_proto_depIdxs = []int32{
	10, // 0: hootfs.node.MakeDirectoryCSRequest.parent_dir_id:type_name -> hootfs.head.UUID
	10, // 1: hootfs.node.MakeDirectoryCSRequest.new_dir_id:type_name -> hootfs.head.UUID
	10, // 2: hootfs.node.MakeDirectoryCSResponse.created_dir_id:type_name -> hootfs.head.UUID
	10, // 3: hootfs.node.AddNewFileCSRequest.parent_dir_id:type_name -> hootfs.head.UUID
	10, // 4: hootfs.node.AddNewFileCSRequest.new_file_id:type_name -> hootfs.head.UUID
	10, // 5: hootfs.node.AddNewFileCSResponse.created_file_id:type_name -> hootfs.head.UUID
	10, // 6: hootfs.node.UpdateFileContentsCSRequest.file_id:type_name -> hootfs.head.UUID
	10, // 7: hootfs.node.UpdateFileContentsCSResponse.updated_file_id:type_name -> hootfs.head.UUID
	10, // 8: hootfs.node.MoveObjectCSRequest.curr_object_id:type_name -> hootfs.head.UUID
	10, // 9: hootfs.node.MoveObjectCSRequest.new_object_id:type_name -> hootfs.head.UUID
	10, // 10: hootfs.node.MoveObjectCSRequest.dir_id:type_name -> hootfs.head.UUID
	10, // 11: hootfs.node.MoveObjectCSResponse.moved_object_id:type_name -> hootfs.head.UUID
	10, // 12: hootfs.node.RemoveObjectCSRequest.object_id:type_name -> hootfs.head.UUID
	10, // 13: hootfs.node.RemoveObjectCSResponse.removed_object_id:type_name -> hootfs.head.UUID
	0,  // 14: hootfs.node.ClusterService.MakeDirectoryCS:input_type -> hootfs.node.MakeDirectoryCSRequest
	2,  // 15: hootfs.node.ClusterService.AddNewFileCS:input_type -> hootfs.node.AddNewFileCSRequest
	4,  // 16: hootfs.node.ClusterService.UpdateFileContentsCS:input_type -> hootfs.node.UpdateFileContentsCSRequest
	6,  // 17: hootfs.node.ClusterService.MoveObjectCS:input_type -> hootfs.node.MoveObjectCSRequest
	8,  // 18: hootfs.node.ClusterService.RemoveObjectCS:input_type -> hootfs.node.RemoveObjectCSRequest
	1,  // 19: hootfs.node.ClusterService.MakeDirectoryCS:output_type -> hootfs.node.MakeDirectoryCSResponse
	3,  // 20: hootfs.node.ClusterService.AddNewFileCS:output_type -> hootfs.node.AddNewFileCSResponse
	5,  // 21: hootfs.node.ClusterService.UpdateFileContentsCS:output_type -> hootfs.node.UpdateFileContentsCSResponse
	7,  // 22: hootfs.node.ClusterService.MoveObjectCS:output_type -> hootfs.node.MoveObjectCSResponse
	9,  // 23: hootfs.node.ClusterService.RemoveObjectCS:output_type -> hootfs.node.RemoveObjectCSResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_node_proto_init() }
func file_node_proto_init() {
	if File_node_proto != nil {
		return
	}
	file_head_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_node_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeDirectoryCSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeDirectoryCSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewFileCSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNewFileCSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileContentsCSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileContentsCSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveObjectCSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveObjectCSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveObjectCSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveObjectCSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_proto_goTypes,
		DependencyIndexes: file_node_proto_depIdxs,
		MessageInfos:      file_node_proto_msgTypes,
	}.Build()
	File_node_proto = out.File
	file_node_proto_rawDesc = nil
	file_node_proto_goTypes = nil
	file_node_proto_depIdxs = nil
}
